name: Cypress test run
on: [ push ]

jobs:
  Cypress-E2E:
    runs-on: ubuntu-latest
    env:
      NGROK_TOKEN: ${{ secrets.NGROK_TOKEN }}
#     strategy:
#       fail-fast: false
#       matrix:
#         # Set N number of parallel jobs you want to run tests on.
#         # Use higher number if you have slow tests to split them on more parallel jobs.
#         # Remember to update ci_node_index below to 0..N-1
#         ci_node_total: [7]
#         # set N-1 indexes for parallel jobs
#         # When you run 2 parallel jobs then first job will have index 0, the second job will have index 1 etc
#         ci_node_index: [0, 1, 2, 3, 4, 5, 6, 7]
    steps:

      - name: Checkout
        uses: actions/checkout@v2.0.0

      - run: wget https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-amd64.zip
        shell: bash
      - run: unzip -qq ngrok-stable-linux-amd64.zip
        shell: bash
      - run: ./ngrok authtoken ${{ secrets.NGROK_TOKEN }}
        shell: bash
      - run: ./ngrok http -subdomain=demoshop 8001 > ngrok.log &
        shell: bash

      - name: install composer
        run: composer i

      - name: Initializing the Prestashop 1.7.8.3 Apache
        run: |
          docker network create prestashop-net
          docker run -ti --name some-mysql --network prestashop-net -e MYSQL_ROOT_PASSWORD=admin -e MYSQL_DATABASE=prestashop -p 3307:3306 -d mysql:5.7
          docker run -ti -v $PWD:/var/www/html/modules/mollie --name some-prestashop --network prestashop-net -e DB_SERVER=some-mysql -e PS_INSTALL_AUTO=1 -e DB_NAME=prestashop -e PS_FOLDER_ADMIN=admin1 -e PS_DEV_MODE=1 -e PS_SSL_ENABLED=1 -p 8001:80 -d prestashop/prestashop:1.7.8.3-apache
          sleep 2m

      - name: Installing the latest module to the Prestashop
        run: |
          # installing module
          docker exec -i some-prestashop sh -c "cd / && chmod -R 777 var"
          docker exec -i some-prestashop sh -c "cd /var/www/html && php  bin/console prestashop:module install mollie"

      - name: Running the E2E tests on Docker (PS + Cypress)
        run: |
          docker exec -i some-prestashop sh -c "cd / && chmod -R 777 var"
          npx browserslist@latest --update-db
          npm ci
          npx cypress run
        
      - name: Archive videos and screenshots
        if: ${{ always() }}
        uses: actions/upload-artifact@v2
        with:
          name: videos_screenshots
          retention-days: 5
          path: |
            cypress/videos
            cypress/screenshots